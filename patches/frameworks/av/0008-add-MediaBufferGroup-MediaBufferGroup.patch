From 86610c32529cdb24e5205470ba9b982c905b790c Mon Sep 17 00:00:00 2001
From: bilux <i.bilux@gmail.com>
Date: Sun, 22 Mar 2020 23:08:33 +0100
Subject: [PATCH] add MediaBufferGroup:MediaBufferGroup()

add Android M MediaBufferGroup:MediaBufferGroup() for libwvm.so
add missing MediaBufferGroup::acquire_buffer symbol

Signed-off-by: bilux <i.bilux@gmail.com>
---
 media/libmediaextractor/MediaBufferGroup.cpp     | 16 ++++++++++++++++
 .../include/media/stagefright/MediaBufferGroup.h | 11 +++++++++++
 2 files changed, 27 insertions(+)

diff --git a/media/libmediaextractor/MediaBufferGroup.cpp b/media/libmediaextractor/MediaBufferGroup.cpp
index 2a8dd41..3351872 100644
--- a/media/libmediaextractor/MediaBufferGroup.cpp
+++ b/media/libmediaextractor/MediaBufferGroup.cpp
@@ -25,6 +25,10 @@
 #include <media/stagefright/MediaBufferGroup.h>
 #include <utils/threads.h>
 
+#ifndef MTK_HARDWARE
+#define MTK_HARDWARE
+#endif
+
 namespace android {
 
 // std::min is not constexpr in C++11
@@ -43,6 +47,12 @@ struct MediaBufferGroup::InternalData {
     std::list<MediaBufferBase *> mBuffers;
 };
 
+#ifdef MTK_HARDWARE
+MediaBufferGroup::MediaBufferGroup() :
+    mGrowthLimit(0) {
+}
+#endif
+
 MediaBufferGroup::MediaBufferGroup(size_t growthLimit)
     : mInternal(new InternalData()) {
     mInternal->mGrowthLimit = growthLimit;
@@ -152,6 +162,12 @@ bool MediaBufferGroup::has_buffers() {
     return false;
 }
 
+#ifdef MTK_HARDWARE
+status_t MediaBufferGroup::acquire_buffer(
+        MediaBufferBase **out, bool nonBlocking) {
+    return acquire_buffer(out, nonBlocking, 0);
+}
+#endif
 status_t MediaBufferGroup::acquire_buffer(
         MediaBufferBase **out, bool nonBlocking, size_t requestedSize) {
     Mutex::Autolock autoLock(mInternal->mLock);
diff --git a/media/libmediaextractor/include/media/stagefright/MediaBufferGroup.h b/media/libmediaextractor/include/media/stagefright/MediaBufferGroup.h
index 75d5df7..d9fe371 100644
--- a/media/libmediaextractor/include/media/stagefright/MediaBufferGroup.h
+++ b/media/libmediaextractor/include/media/stagefright/MediaBufferGroup.h
@@ -24,12 +24,19 @@
 #include <utils/Errors.h>
 #include <utils/threads.h>
 
+#ifndef MTK_HARDWARE
+#define MTK_HARDWARE
+#endif
+
 namespace android {
 
 class MediaBufferBase;
 
 class MediaBufferGroup : public MediaBufferObserver {
 public:
+#ifdef MTK_HARDWARE
+    MediaBufferGroup();
+#endif
     MediaBufferGroup(size_t growthLimit = 0);
 
     // create a media buffer group with preallocated buffers
@@ -49,6 +56,10 @@ public:
     // If requestedSize is 0, any free MediaBuffer will be returned.
     // If requestedSize is > 0, the returned MediaBuffer should have buffer
     // size of at least requstedSize.
+#ifdef MTK_HARDWARE
+    status_t acquire_buffer(
+            MediaBufferBase **buffer, bool nonBlocking = false);
+#endif
     status_t acquire_buffer(
             MediaBufferBase **buffer, bool nonBlocking = false, size_t requestedSize = 0);
 
-- 
2.31.1

